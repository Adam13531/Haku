generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DB_URL")
  shadowDatabaseUrl = env("SHADOW_DB_URL")
}

model EmailAllowList {
  id    Int    @id @default(autoincrement())
  email String @unique
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?

  sessions Session[]
  folders  Folder[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  expires      DateTime

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Folder {
  id   Int        @id @default(autoincrement())
  name String
  type FolderType

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  parentId Int?
  parent   Folder?  @relation("FolderToFolder", fields: [parentId], references: [id])
  children Folder[] @relation("FolderToFolder")

  @@unique([parentId, type, userId, name], map: "Folder_parentId_type_userId_name_unique_constraint")
}

enum FolderType {
  NOTE
  TODO
}
